---
import Layout from '~/layouts/PageLayout.astro';

const metadata = {
  title: 'Contact Us',
  description: 'Get in touch with us. We\'d love to hear from you.',
};
---

<Layout metadata={metadata}>
  <div class="max-w-4xl mx-auto px-6 py-12">
    <!-- Header -->
    <div class="text-center mb-12">
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
        Contact Us
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
        Have a question or need help? We'd love to hear from you. Send us a message and we'll get back to you as soon as possible.
      </p>
    </div>

    <!-- Contact Form -->
    <div class="bg-white dark:bg-slate-800 rounded-xl shadow-lg p-8 border border-gray-200 dark:border-slate-700">
      <form id="contact-form" class="space-y-6">
        <!-- Name Field -->
        <div>
          <label for="name" class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
            Full Name *
          </label>
          <input 
            type="text" 
            id="name" 
            name="name" 
            required
            class="w-full px-4 py-3 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-slate-700 dark:text-white transition-colors"
            placeholder="Enter your full name"
          />
        </div>

        <!-- Email Field -->
        <div>
          <label for="email" class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
            Email Address *
          </label>
          <input 
            type="email" 
            id="email" 
            name="email" 
            required
            class="w-full px-4 py-3 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-slate-700 dark:text-white transition-colors"
            placeholder="Enter your email address"
          />
        </div>

        <!-- Subject Field -->
        <div>
          <label for="subject" class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
            Subject *
          </label>
          <input 
            type="text" 
            id="subject" 
            name="subject" 
            required
            class="w-full px-4 py-3 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-slate-700 dark:text-white transition-colors"
            placeholder="What is this about?"
          />
        </div>

        <!-- Message Field -->
        <div>
          <label for="message" class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
            Message *
          </label>
          <textarea 
            id="message" 
            name="message" 
            required
            rows="6"
            class="w-full px-4 py-3 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-slate-700 dark:text-white transition-colors resize-vertical"
            placeholder="Tell us more about your question or how we can help..."
          ></textarea>
        </div>

        <!-- Submit Button -->
        <div class="text-center">
          <button 
            type="submit" 
            class="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-8 py-3 rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-slate-800"
          >
            Send Message
          </button>
        </div>

        <!-- Status Message -->
        <div id="form-status" class="text-center hidden">
          <p id="status-message" class="text-sm"></p>
        </div>
      </form>
    </div>

    <!-- Contact Info -->
    <div class="mt-12 text-center">
      <p class="text-gray-600 dark:text-gray-300">
        You can also email us directly at 
        <a href="mailto:h1hivequeries@gmail.com" class="text-blue-600 dark:text-blue-400 hover:underline font-medium">
          h1hivequeries@gmail.com
        </a>
      </p>
    </div>
  </div>

  <!-- Form Handling Script -->
  <script>
    (function(){
      const form = document.getElementById('contact-form') as HTMLFormElement | null;
      if(!form) return;
      const statusDiv = document.getElementById('form-status');
      const statusMessage = document.getElementById('status-message');
      let sending = false;
      // Derive backend base (reuse logic similar to practice page if global override present)
      const BACKEND_BASE = (() => {
        const win = window as unknown as { __BACKEND_URL__?: string };
        const explicit = win.__BACKEND_URL__ || (import.meta as unknown as { env?: { PUBLIC_BACKEND_URL?: string } }).env?.PUBLIC_BACKEND_URL;
        if (explicit) return explicit.replace(/\/$/, '');
        return 'http://localhost:3001';
      })();

      form.addEventListener('submit', async function(e){
        e.preventDefault();
        if (sending) return;
        sending = true;
        const fd = new FormData(form as HTMLFormElement);
        const payload = {
          name: fd.get('name'),
          email: fd.get('email'),
          subject: fd.get('subject'),
          message: fd.get('message')
        };
        function setStatus(text, cls){
          if(!statusDiv || !statusMessage) return;
            statusDiv.classList.remove('hidden');
            statusMessage.textContent = text;
            statusMessage.className = 'text-sm ' + cls;
        }
        setStatus('Sending message...','text-blue-600 dark:text-blue-400');
        try {
          const endpoint = BACKEND_BASE + '/api/contact';
          const res = await fetch(endpoint, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
          });
          const json = await res.json().catch(()=>({}));
          if (res.ok) {
            setStatus('Message sent successfully! We will reply soon.' + (json.skipped ? ' (Email service not configured; stored locally.)' : ''),'text-green-600 dark:text-green-400');
            form.reset();
          } else {
            if (res.status === 404) {
              setStatus('Contact endpoint not found on backend (404). Ensure backend restarted and includes /api/contact route.','text-red-600 dark:text-red-400');
            } else {
              setStatus(json.error || 'Failed to send message. Please try again later.','text-red-600 dark:text-red-400');
            }
          }
        } catch {
          setStatus('Network error sending message. Please retry.','text-red-600 dark:text-red-400');
        } finally {
          sending = false;
          setTimeout(()=>{ statusDiv?.classList.add('hidden'); }, 8000);
        }
      });
    })();
  </script>
</Layout>
